import{_ as s,o as a,c as n,O as l}from"./chunks/framework.cc2ec653.js";const A=JSON.parse('{"title":"forEach 范围问题","description":"你有没有思考过这个问题，在数组forEach时，数组追加元素，删除元素，结果会变成什么样？","frontmatter":{"date":"2022-11-08T00:00:00.000Z","title":"forEach 范围问题","tags":["javascript","es6"],"description":"你有没有思考过这个问题，在数组forEach时，数组追加元素，删除元素，结果会变成什么样？"},"headers":[],"relativePath":"posts/0002.md"}'),p={name:"posts/0002.md"},o=l(`<h1 id="foreach-范围问题" tabindex="-1">forEach 范围问题 <a class="header-anchor" href="#foreach-范围问题" aria-label="Permalink to &quot;forEach 范围问题&quot;">​</a></h1><h3 id="先来思考下面两段代码" tabindex="-1">先来思考下面两段代码 <a class="header-anchor" href="#先来思考下面两段代码" aria-label="Permalink to &quot;先来思考下面两段代码&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">item</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">item</span><span style="color:#89DDFF;">==</span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">100</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">item</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(arr)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 结果</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &gt; 1</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &gt; 2</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &gt; 3</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &gt; 4</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &gt; [1,2,3,4,100]</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Set</span><span style="color:#A6ACCD;">([</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">item</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">item</span><span style="color:#89DDFF;">==</span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">       </span><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">100</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">item</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(arr))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 结果</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &gt; 1</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &gt; 2</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &gt; 3</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &gt; 4</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &gt; 100</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &gt; [1,2,3,4,100]</span></span></code></pre></div><p>我们发现，<code>array</code>和<code>set</code>的<code>forEach</code>中打印的结果是不同的，<code>array</code>并没有打印出我新添加的值，而<code>set</code>则是可以的，这是为什么？</p><p>假如我在<code>forEach</code> <code>set</code> 的时候没有条件，使用<code>add</code>的话。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Set</span><span style="color:#A6ACCD;">([</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">item</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// set的值添加重复的无意义 则改为每次添加的都 item+1</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">item</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(arr))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 结果</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// [angeError: Value undefined out of range for undefined options property undefined</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//    1,  2,  3,   4,  5,  6,  7,  8,  9, 10, 11, 12,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   13, 14, 15,  16, 17, 18, 19, 20, 21, 22, 23, 24,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   25, 26, 27,  28, 29, 30, 31, 32, 33, 34, 35, 36,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   37, 38, 39,  40, 41, 42, 43, 44, 45, 46, 47, 48,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   49, 50, 51,  52, 53, 54, 55, 56, 57, 58, 59, 60,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   61, 62, 63,  64, 65, 66, 67, 68, 69, 70, 71, 72,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   73, 74, 75,  76, 77, 78, 79, 80, 81, 82, 83, 84,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   85, 86, 87,  88, 89, 90, 91, 92, 93, 94, 95, 96,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   97, 98, 99, 100,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   ... 16777116 more items</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ]</span></span></code></pre></div><h3 id="查找资料了解其中缘由" tabindex="-1">查找资料了解其中缘由 <a class="header-anchor" href="#查找资料了解其中缘由" aria-label="Permalink to &quot;查找资料了解其中缘由&quot;">​</a></h3><ul><li><strong>array.forEach</strong><ul><li><code>forEach()</code> 遍历的范围在第一次调用 <code>callback</code> 前就会确定。</li><li>调用 forEach 后添加到数组中的项不会被 <code>callback</code> 访问到。</li><li>如果已经存在的值被改变，则传递给 <code>callback</code> 的值是 <code>forEach()</code> 遍历到他们那一刻的值。</li><li>已删除的项不会被遍历到。如果已访问的元素在迭代时被删除了（例如使用 <code>shift()</code>），之后的元素将被跳过</li></ul></li></ul><blockquote><p>总结来说：当我们使用<code>forEach</code> 开始，循环的次数定了，新添加的不会影响循环次数，删除元素则会影响循环次数，并且修改元素要在元素回调前修改方可生效。例如在<code>forEach</code> <code>shift</code> 回调里的打印和回调外的打印环境是不一致的。</p></blockquote><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">item</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">item</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">shift</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">1000</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">item</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(arr)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 结果</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &gt; 1</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &gt; 3</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &gt; 4</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &gt; [2,3,4]</span></span></code></pre></div><ul><li><strong>set.forEach</strong></li></ul><p>这一点 <code>set.forEach</code> 则符合我们想的那种思维感觉，只要添加了就接着循环回调，所以在无任何条件下就会出现无限循环。</p>`,13),e=[o];function t(c,r,y,F,i,D){return a(),n("div",null,e)}const d=s(p,[["render",t]]);export{A as __pageData,d as default};
